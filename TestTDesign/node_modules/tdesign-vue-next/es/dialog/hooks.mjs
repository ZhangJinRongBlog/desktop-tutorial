/**
 * tdesign v1.8.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../_chunks/dep-b333ab93.mjs';
import { _ as _defineProperty } from '../_chunks/dep-a26b9c60.mjs';
import { getCurrentInstance, createVNode, mergeProps } from 'vue';
import { i as isString_1 } from '../_chunks/dep-5f6c8826.mjs';
import { i as isObject_1 } from '../_chunks/dep-4efc69ee.mjs';
import { o as omit_1 } from '../_chunks/dep-7cc8d2c3.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { Button } from '../button/index.mjs';
import '../_chunks/dep-6f3e4f56.mjs';
import '../_chunks/dep-b1060562.mjs';
import '../_chunks/dep-0d1bd08c.mjs';
import '../_chunks/dep-c5d88cfe.mjs';
import '../_chunks/dep-8049d2e0.mjs';
import '../_chunks/dep-7ad89920.mjs';
import '../_chunks/dep-36563716.mjs';
import '../_chunks/dep-b56b2dc0.mjs';
import '../_chunks/dep-77f634fb.mjs';
import '../_chunks/dep-28ae3cda.mjs';
import '../_chunks/dep-e50fa7b0.mjs';
import '../_chunks/dep-97c71289.mjs';
import '../_chunks/dep-ae08d6c4.mjs';
import '../_chunks/dep-7211604f.mjs';
import '../_chunks/dep-75df64b1.mjs';
import '../_chunks/dep-48b9a098.mjs';
import '../_chunks/dep-c7e4942d.mjs';
import '../_chunks/dep-25d66c95.mjs';
import '../_chunks/dep-372265bb.mjs';
import '../_chunks/dep-d940e2da.mjs';
import '../_chunks/dep-52c1d6a9.mjs';
import '../_chunks/dep-18bb982b.mjs';
import '../_chunks/dep-c57d8117.mjs';
import '../_chunks/dep-6043e9fc.mjs';
import '../_chunks/dep-6e04bcaa.mjs';
import '../_chunks/dep-d23f3733.mjs';
import '../_chunks/dep-91fc304f.mjs';
import '../_chunks/dep-881cffb7.mjs';
import '../_chunks/dep-4b3e18ca.mjs';
import '../_chunks/dep-b6b4eaa3.mjs';
import '../_chunks/dep-0a6fd248.mjs';
import '../_chunks/dep-b1013215.mjs';
import '../_chunks/dep-17446155.mjs';
import '../_chunks/dep-8747fcf0.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ec227f3f.mjs';
import '../button/button.mjs';
import '../_chunks/dep-f7837681.mjs';
import '../_chunks/dep-6bcce672.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-89b33ff6.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-9c7a32ff.mjs';
import '../_chunks/dep-c45cdd10.mjs';
import '../_chunks/dep-ce88e3c0.mjs';
import '../_chunks/dep-a432d90f.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-493c38ce.mjs';
import '../_chunks/dep-3a045465.mjs';
import '../_chunks/dep-53dc0ac1.mjs';
import '../_chunks/dep-436b338d.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-2d31a683.mjs';
import '../_chunks/dep-3ddc95d0.mjs';
import '../config-provider/type.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-11ebe61f.mjs';
import '../button/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useAction(action) {
  var instance = getCurrentInstance();
  var renderTNodeJSX = useTNodeJSX();
  var getDefaultConfirmBtnProps = function getDefaultConfirmBtnProps(options) {
    var _omit;
    var globalConfirm = options.globalConfirm,
      theme = options.theme,
      globalConfirmBtnTheme = options.globalConfirmBtnTheme;
    var defaultTheme = ((_omit = omit_1(globalConfirmBtnTheme, ["info"])) === null || _omit === void 0 ? void 0 : _omit[theme]) || "primary";
    var props = {
      theme: defaultTheme,
      size: options.size,
      onClick: function onClick(e) {
        action.confirmBtnAction(e);
      }
    };
    if (isString_1(globalConfirm)) {
      props.content = globalConfirm;
    } else if (isObject_1(globalConfirm)) {
      props = _objectSpread(_objectSpread({}, props), globalConfirm);
    }
    return props;
  };
  var getDefaultCancelBtnProps = function getDefaultCancelBtnProps(options) {
    var globalCancel = options.globalCancel;
    var props = {
      theme: "default",
      size: options.size,
      onClick: function onClick(e) {
        action.cancelBtnAction(e);
      }
    };
    if (isString_1(globalCancel)) {
      props.content = globalCancel;
    } else if (isObject_1(globalCancel)) {
      props = _objectSpread(_objectSpread({}, props), globalCancel);
    }
    return props;
  };
  var getButtonByProps = function getButtonByProps(button, params) {
    var defaultButtonProps = params.defaultButtonProps,
      className = params.className,
      confirmLoading = params.confirmLoading;
    var newOptions = defaultButtonProps;
    if (isString_1(button)) {
      newOptions.content = button;
    } else if (isObject_1(button)) {
      newOptions = _objectSpread(_objectSpread({}, newOptions), button);
    }
    if (confirmLoading !== void 0) {
      newOptions.loading = confirmLoading;
    }
    return createVNode(Button, mergeProps({
      "class": className
    }, newOptions), null);
  };
  var getConfirmBtn = function getConfirmBtn(options) {
    var confirmBtn = options.confirmBtn,
      className = options.className,
      confirmLoading = options.confirmLoading;
    if (confirmBtn === null) return null;
    if (confirmBtn && instance.slots.confirmBtn) {
      console.warn("Both $props.confirmBtn and $scopedSlots.confirmBtn exist, $props.confirmBtn is preferred.");
    }
    var defaultButtonProps = getDefaultConfirmBtnProps(options);
    if (!confirmBtn && !instance.slots.confirmBtn) {
      return createVNode(Button, mergeProps({
        "class": className,
        "loading": confirmLoading
      }, defaultButtonProps), null);
    }
    if (confirmBtn && ["string", "object"].includes(_typeof(confirmBtn))) {
      return getButtonByProps(confirmBtn, {
        defaultButtonProps: defaultButtonProps,
        className: className,
        confirmLoading: confirmLoading
      });
    }
    return renderTNodeJSX("confirmBtn");
  };
  var getCancelBtn = function getCancelBtn(options) {
    var cancelBtn = options.cancelBtn,
      className = options.className;
    if (cancelBtn === null) return null;
    if (cancelBtn && instance.slots.cancelBtn) {
      console.warn("Both $props.cancelBtn and $scopedSlots.cancelBtn exist, $props.cancelBtn is preferred.");
    }
    var defaultButtonProps = getDefaultCancelBtnProps(options);
    if (!cancelBtn && !instance.slots.cancelBtn) {
      return createVNode(Button, mergeProps({
        "class": className
      }, defaultButtonProps), null);
    }
    if (cancelBtn && ["string", "object"].includes(_typeof(cancelBtn))) {
      return getButtonByProps(cancelBtn, {
        defaultButtonProps: defaultButtonProps
      });
    }
    return renderTNodeJSX("cancelBtn");
  };
  return {
    getConfirmBtn: getConfirmBtn,
    getCancelBtn: getCancelBtn
  };
}
function useSameTarget(handleClick) {
  var MOUSEDOWN_TARGET = false;
  var MOUSEUP_TARGET = false;
  var onClick = function onClick(e) {
    if (MOUSEDOWN_TARGET && MOUSEUP_TARGET) {
      handleClick(e);
    }
    MOUSEDOWN_TARGET = false;
    MOUSEUP_TARGET = false;
  };
  var onMousedown = function onMousedown(e) {
    MOUSEDOWN_TARGET = e.target === e.currentTarget;
  };
  var onMouseup = function onMouseup(e) {
    MOUSEUP_TARGET = e.target === e.currentTarget;
  };
  return {
    onClick: onClick,
    onMousedown: onMousedown,
    onMouseup: onMouseup
  };
}

export { useAction, useSameTarget };
//# sourceMappingURL=hooks.mjs.map
