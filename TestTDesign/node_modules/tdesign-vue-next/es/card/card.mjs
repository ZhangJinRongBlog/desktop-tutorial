/**
 * tdesign v1.8.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { isVNode, defineComponent, computed, createVNode } from 'vue';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { Loading } from '../loading/index.mjs';
import props from './props.mjs';
import { i as isString_1 } from '../_chunks/dep-5f6c8826.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-97c71289.mjs';
import '../_chunks/dep-6f3e4f56.mjs';
import '../_chunks/dep-b1060562.mjs';
import '../_chunks/dep-b333ab93.mjs';
import '../_chunks/dep-4efc69ee.mjs';
import '../_chunks/dep-493c38ce.mjs';
import '../_chunks/dep-b56b2dc0.mjs';
import '../_chunks/dep-77f634fb.mjs';
import '../_chunks/dep-28ae3cda.mjs';
import '../_chunks/dep-e50fa7b0.mjs';
import '../_chunks/dep-ae08d6c4.mjs';
import '../_chunks/dep-7211604f.mjs';
import '../_chunks/dep-75df64b1.mjs';
import '../_chunks/dep-48b9a098.mjs';
import '../_chunks/dep-c7e4942d.mjs';
import '../_chunks/dep-8049d2e0.mjs';
import '../_chunks/dep-0d1bd08c.mjs';
import '../_chunks/dep-c5d88cfe.mjs';
import '../_chunks/dep-25d66c95.mjs';
import '../_chunks/dep-372265bb.mjs';
import '../_chunks/dep-d940e2da.mjs';
import '../_chunks/dep-52c1d6a9.mjs';
import '../_chunks/dep-18bb982b.mjs';
import '../_chunks/dep-c57d8117.mjs';
import '../_chunks/dep-6043e9fc.mjs';
import '../_chunks/dep-3a045465.mjs';
import '../_chunks/dep-53dc0ac1.mjs';
import '../_chunks/dep-b6b4eaa3.mjs';
import '../_chunks/dep-881cffb7.mjs';
import '../_chunks/dep-436b338d.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-2d31a683.mjs';
import '../_chunks/dep-3ddc95d0.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-0a6fd248.mjs';
import '../_chunks/dep-7ad89920.mjs';
import '../_chunks/dep-36563716.mjs';
import '../_chunks/dep-b1013215.mjs';
import '../_chunks/dep-91fc304f.mjs';
import '../_chunks/dep-17446155.mjs';
import '../_chunks/dep-8747fcf0.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-ec227f3f.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../_chunks/dep-a26b9c60.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-89b33ff6.mjs';
import '../_chunks/dep-6bcce672.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-f7837681.mjs';
import '../_chunks/dep-9c7a32ff.mjs';
import '../_chunks/dep-c45cdd10.mjs';
import '../_chunks/dep-ce88e3c0.mjs';
import '../_chunks/dep-a432d90f.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _Card = defineComponent({
  name: "TCard",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var renderTNodeJSX = useTNodeJSX();
    var COMPONENT_NAME = usePrefixClass("card");
    var _useCommonClassName = useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var baseCls = computed(function () {
      var defaultClass = [COMPONENT_NAME.value];
      if (props2.size === "small") defaultClass.push("".concat(SIZE.value[props2.size]));
      if (props2.bordered) defaultClass.push("".concat(COMPONENT_NAME.value, "--bordered"));
      if (props2.shadow) defaultClass.push("".concat(COMPONENT_NAME.value, "--shadow"));
      if (props2.hoverShadow) defaultClass.push("".concat(COMPONENT_NAME.value, "--shadow-hover"));
      return defaultClass;
    });
    var headerCls = computed(function () {
      var defaultClass = ["".concat(COMPONENT_NAME.value, "__header")];
      return props2.headerBordered ? defaultClass.concat("".concat(COMPONENT_NAME.value, "__title--bordered")) : ["".concat(COMPONENT_NAME.value, "__header")];
    });
    var headerWrapperCls = usePrefixClass("card__header-wrapper");
    var headerAvatarCls = usePrefixClass("card__avatar");
    var headerTitleCls = usePrefixClass("card__title");
    var headerSubTitleCls = usePrefixClass("card__subtitle");
    var headerDescriptionCls = usePrefixClass("card__description");
    var actionsCls = usePrefixClass("card__actions");
    var bodyCls = usePrefixClass("card__body");
    var coverCls = usePrefixClass("card__cover");
    var footerCls = usePrefixClass("card__footer");
    var footerWrapperCls = usePrefixClass("card__footer-wrapper");
    var isPoster2 = computed(function () {
      return props2.theme === "poster2";
    });
    var showTitle = computed(function () {
      return props2.title || slots.title;
    });
    var showHeader = computed(function () {
      return props2.header || slots.header;
    });
    var showSubtitle = computed(function () {
      return props2.subtitle || slots.subtitle;
    });
    var showAvatar = computed(function () {
      return props2.avatar || slots.avatar;
    });
    var showDescription = computed(function () {
      return props2.description || slots.description;
    });
    var showStatus = computed(function () {
      return props2.status || slots.status;
    });
    var showActions = computed(function () {
      return props2.actions || slots.actions;
    });
    var showFooter = computed(function () {
      return props2.footer || slots.footer;
    });
    var showCover = computed(function () {
      return props2.cover || slots.cover;
    });
    var showLoading = computed(function () {
      return props2.loading || slots.loading;
    });
    var showContent = computed(function () {
      return props2.content || slots.content || props2["default"] || slots["default"];
    });
    var isHeaderRender = computed(function () {
      return showHeader.value || showTitle.value || showSubtitle.value || showDescription.value || showAvatar.value || showStatus.value && isPoster2.value || showActions.value && !isPoster2.value;
    });
    var isFooterRender = computed(function () {
      return showFooter.value || showActions.value && isPoster2.value;
    });
    var renderHeader = function renderHeader() {
      if (showHeader.value) return createVNode("div", {
        "class": headerCls.value
      }, [renderTNodeJSX("header")]);
      return createVNode("div", {
        "class": headerCls.value
      }, [createVNode("div", {
        "class": headerWrapperCls.value
      }, [showAvatar.value && createVNode("div", {
        "class": headerAvatarCls.value
      }, [renderTNodeJSX("avatar")]), createVNode("div", null, [showTitle.value && createVNode("div", {
        "class": headerTitleCls.value
      }, [renderTNodeJSX("title")]), showSubtitle.value && createVNode("div", {
        "class": headerSubTitleCls.value
      }, [renderTNodeJSX("subtitle")]), showDescription.value && createVNode("p", {
        "class": headerDescriptionCls.value
      }, [renderTNodeJSX("description")])])]), showActions.value && !isPoster2.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("actions")]), showStatus.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("status")])]);
    };
    var renderCover = function renderCover() {
      var textCover = isString_1(props2.cover);
      return createVNode("div", {
        "class": coverCls.value
      }, [textCover ? createVNode("img", {
        "src": props2.cover
      }, null) : renderTNodeJSX("cover")]);
    };
    return function () {
      var content = createVNode("div", {
        "class": baseCls.value
      }, [isHeaderRender.value ? renderHeader() : null, showCover.value ? renderCover() : null, showContent.value && createVNode("div", {
        "class": bodyCls.value
      }, [renderTNodeJSX("default") || renderTNodeJSX("content")]), isFooterRender.value && createVNode("div", {
        "class": footerCls.value
      }, [createVNode("div", {
        "class": footerWrapperCls.value
      }, [renderTNodeJSX("footer")]), showActions.value && isPoster2.value && createVNode("div", {
        "class": actionsCls.value
      }, [renderTNodeJSX("actions")])])]);
      if (showLoading.value) {
        return renderTNodeJSX("loading") || createVNode(Loading, props2.loadingProps, _isSlot(content) ? content : {
          "default": function _default() {
            return [content];
          }
        });
      }
      return content;
    };
  }
});

export { _Card as default };
//# sourceMappingURL=card.mjs.map
