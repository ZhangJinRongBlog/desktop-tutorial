/**
 * tdesign v1.8.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { elementInViewport } from '../../utils/dom.mjs';
import '../../_chunks/dep-6f3e4f56.mjs';
import '../../_chunks/dep-5f6c8826.mjs';
import '../../_chunks/dep-b1060562.mjs';
import '../../_chunks/dep-b333ab93.mjs';
import '../../_chunks/dep-0d1bd08c.mjs';
import '../../_chunks/dep-c5d88cfe.mjs';
import '../../_chunks/dep-8049d2e0.mjs';
import '../../_chunks/dep-97c71289.mjs';
import '../../_chunks/dep-4efc69ee.mjs';
import '../../utils/easing.mjs';

function getScrollParent(element) {
  var style = window.getComputedStyle(element);
  var excludeStaticParent = style.position === "absolute";
  var overflowRegex = /(auto|scroll)/;
  if (style.position === "fixed") return document.body;
  for (var parent = element; parent.parentElement;) {
    parent = parent.parentElement;
    style = window.getComputedStyle(parent);
    if (excludeStaticParent && style.position === "static") {
      continue;
    }
    if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) return parent;
  }
  return document.body;
}
function scrollToParentVisibleArea(element) {
  var parent = getScrollParent(element);
  if (parent === document.body) return;
  if (elementInViewport(element, parent)) return;
  parent.scrollTop = element.offsetTop - parent.offsetTop;
}

export { getScrollParent, scrollToParentVisibleArea };
//# sourceMappingURL=getScrollParent.mjs.map
