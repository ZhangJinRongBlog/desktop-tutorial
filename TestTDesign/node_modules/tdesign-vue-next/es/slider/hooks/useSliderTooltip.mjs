/**
 * tdesign v1.8.0
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-a26b9c60.mjs';
import { ref, computed } from 'vue';
import { formatLabel } from '../util/common.mjs';
import '../../hooks/index.mjs';
import { useTNodeDefault } from '../../hooks/tnode.mjs';
import '../../_chunks/dep-b333ab93.mjs';
import '../../_chunks/dep-5f6c8826.mjs';
import '../../_chunks/dep-6f3e4f56.mjs';
import '../../_chunks/dep-b1060562.mjs';
import '../../_chunks/dep-0d1bd08c.mjs';
import '../../_chunks/dep-c5d88cfe.mjs';
import '../../_chunks/dep-8049d2e0.mjs';
import '../../hooks/icon.mjs';
import '../../_chunks/dep-97c71289.mjs';
import '../../_chunks/dep-4efc69ee.mjs';
import '../../hooks/slot.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-493c38ce.mjs';
import '../../_chunks/dep-b56b2dc0.mjs';
import '../../_chunks/dep-77f634fb.mjs';
import '../../_chunks/dep-28ae3cda.mjs';
import '../../_chunks/dep-e50fa7b0.mjs';
import '../../_chunks/dep-ae08d6c4.mjs';
import '../../_chunks/dep-7211604f.mjs';
import '../../_chunks/dep-75df64b1.mjs';
import '../../_chunks/dep-48b9a098.mjs';
import '../../_chunks/dep-c7e4942d.mjs';
import '../../_chunks/dep-25d66c95.mjs';
import '../../_chunks/dep-372265bb.mjs';
import '../../_chunks/dep-d940e2da.mjs';
import '../../_chunks/dep-52c1d6a9.mjs';
import '../../_chunks/dep-18bb982b.mjs';
import '../../_chunks/dep-c57d8117.mjs';
import '../../_chunks/dep-6043e9fc.mjs';
import '../../_chunks/dep-3a045465.mjs';
import '../../_chunks/dep-53dc0ac1.mjs';
import '../../_chunks/dep-b6b4eaa3.mjs';
import '../../_chunks/dep-881cffb7.mjs';
import '../../_chunks/dep-436b338d.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-2d31a683.mjs';
import '../../_chunks/dep-3ddc95d0.mjs';
import '../../config-provider/type.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDefaultValue.mjs';
import '../../_chunks/dep-8747fcf0.mjs';
import '../../_chunks/dep-17446155.mjs';
import '../../_chunks/dep-7ad89920.mjs';
import '../../_chunks/dep-36563716.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useRipple.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../hooks/useVModel.mjs';
import '../../hooks/useImagePreviewUrl.mjs';
import '../../_chunks/dep-89b33ff6.mjs';
import '../../_chunks/dep-6bcce672.mjs';
import '../../_common/js/upload/utils.mjs';
import '../../_common/js/log/log.mjs';
import '../../_chunks/dep-0a6fd248.mjs';
import '../../_chunks/dep-b1013215.mjs';
import '../../_chunks/dep-91fc304f.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-ec227f3f.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var initialProps = {
  visible: false,
  trigger: "hover",
  showArrow: true,
  overlayInnerStyle: void 0,
  overlayClassName: void 0,
  attach: "body",
  theme: "default"
};
var useSliderTooltip = function useSliderTooltip(tooltipConfig) {
  var tooltipRef = ref();
  var showTooltip = computed({
    get: function get() {
      return !tooltipConfig.value.tooltipProps === false;
    },
    set: function set(val) {
      return val;
    }
  });
  var normalizeProps = ref(_objectSpread({}, initialProps));
  var toggleTooltip = function toggleTooltip(toState) {
    if (!showTooltip.value) return;
    normalizeProps.value.visible = toState;
  };
  var renderTNodeJSX = useTNodeDefault();
  var validProps = computed(function () {
    var _tooltipConfig$value = tooltipConfig.value,
      vertical = _tooltipConfig$value.vertical,
      tooltipProps = _tooltipConfig$value.tooltipProps,
      label = _tooltipConfig$value.label,
      value = _tooltipConfig$value.value,
      position = _tooltipConfig$value.position,
      range = _tooltipConfig$value.range;
    var placement = vertical ? "right" : "top";
    var content = function () {
      if (typeof label === "boolean") {
        return String(value);
      }
      if (typeof label === "string") {
        return formatLabel(label, value);
      }
      return renderTNodeJSX("label", {
        params: range ? {
          value: value,
          position: position
        } : {
          value: value
        }
      });
    }();
    if (tooltipProps instanceof Object) {
      if (!(tooltipProps !== null && tooltipProps !== void 0 && tooltipProps.placement)) {
        normalizeProps.value.placement = placement;
      }
      if (tooltipProps.content) {
        content = tooltipProps.content;
      }
      return _objectSpread(_objectSpread(_objectSpread({}, normalizeProps.value), tooltipProps), {}, {
        content: content
      });
    }
    return _objectSpread(_objectSpread({}, normalizeProps.value), {}, {
      placement: placement,
      content: content
    });
  });
  return {
    tooltipRef: tooltipRef,
    tooltipProps: validProps,
    toggleTooltip: toggleTooltip,
    showTooltip: showTooltip
  };
};

export { useSliderTooltip };
//# sourceMappingURL=useSliderTooltip.mjs.map
