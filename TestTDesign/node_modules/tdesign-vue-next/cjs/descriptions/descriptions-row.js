/**
 * tdesign v1.8.0
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var common = require('../common.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var descriptions_const_index = require('./const/index.js');
var descriptions_utils_index = require('./utils/index.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-a481097f.js');
require('dayjs');
require('lodash/isArray');
require('./interface.js');

var DescriptionsRow = Vue.defineComponent({
  name: "TDescriptionsRow",
  props: {
    row: Array,
    itemType: String
  },
  setup: function setup(props) {
    var descriptionsProps = Vue.inject(descriptions_const_index.descriptionsKey);
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("descriptions");
    var label = function label(node) {
      var layout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : common.LayoutEnum.HORIZONTAL;
      var labelClass = ["".concat(COMPONENT_NAME.value, "__label")];
      var label2 = null;
      var span = null;
      if (descriptions_utils_index.itemTypeIsProps(props.itemType)) {
        label2 = node.label;
        span = node.span;
      } else {
        label2 = descriptions_utils_index.renderVNodeTNode(node, "label");
        span = node.props.span;
      }
      var labelSpan = layout === common.LayoutEnum.HORIZONTAL ? 1 : span;
      return Vue.createVNode("td", Vue.mergeProps({
        "colspan": labelSpan,
        "class": labelClass
      }, {
        style: descriptionsProps.labelStyle
      }), [label2, descriptionsProps.colon && ":"]);
    };
    var content = function content(node) {
      var layout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : common.LayoutEnum.HORIZONTAL;
      var contentClass = ["".concat(COMPONENT_NAME.value, "__content")];
      var content2 = null;
      var span = null;
      if (descriptions_utils_index.itemTypeIsProps(props.itemType)) {
        content2 = node.content;
        span = node.span;
      } else {
        content2 = descriptions_utils_index.renderVNodeTNode(node, "content", "default");
        span = node.props.span;
      }
      var contentSpan = span > 1 && layout === common.LayoutEnum.HORIZONTAL ? span * 2 - 1 : span;
      return Vue.createVNode("td", Vue.mergeProps({
        "colspan": contentSpan,
        "class": contentClass
      }, {
        style: descriptionsProps.contentStyle
      }), [content2]);
    };
    var hh = function hh() {
      return Vue.createVNode("tr", null, [props.row.map(function (node) {
        return Vue.createVNode(Vue.Fragment, null, [label(node), content(node)]);
      })]);
    };
    var hv = function hv() {
      return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("tr", null, [props.row.map(function (node) {
        return label(node, common.LayoutEnum.VERTICAL);
      })]), Vue.createVNode("tr", null, [props.row.map(function (node) {
        return content(node, common.LayoutEnum.VERTICAL);
      })])]);
    };
    var vh = function vh() {
      return Vue.createVNode(Vue.Fragment, null, [props.row.map(function (node) {
        return Vue.createVNode("tr", null, [label(node), content(node)]);
      })]);
    };
    var vv = function vv() {
      return Vue.createVNode(Vue.Fragment, null, [props.row.map(function (node) {
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("tr", null, [label(node)]), Vue.createVNode("tr", null, [content(node)])]);
      })]);
    };
    return function () {
      return Vue.createVNode(Vue.Fragment, null, [descriptionsProps.layout === common.LayoutEnum.HORIZONTAL ? descriptionsProps.itemLayout === common.LayoutEnum.HORIZONTAL ? hh() : hv() : descriptionsProps.itemLayout === common.LayoutEnum.HORIZONTAL ? vh() : vv()]);
    };
  }
});

exports["default"] = DescriptionsRow;
//# sourceMappingURL=descriptions-row.js.map
